name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Setup Java JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # 3. Install required packages
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip tar

      # 4. Setup Android SDK
      - name: Install Android SDK & Build Tools
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

        run: |
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;34.0.0" "ndk;25.2.9519653"

      # 6. Make Gradlew executable
      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # 7. Build the APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # 8. Upload the APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d latest
          rm cmdline-tools.zip

          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # 5. Install NDK
      - name: Install NDK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          yes | sdkmanager --install "ndk;23.1.7779620"

      # 6. Accept all licenses
      - name: Accept Licenses
        run: yes | sdkmanager --licenses

      # 7. Check if Gradle Wrapper exists
      - name: Check for Gradle Wrapper
        id: check-wrapper
        run: |
          if [ -f "./gradlew" ]; then
            echo "wrapper=true" >> $GITHUB_ENV
          else
            echo "wrapper=false" >> $GITHUB_ENV
          fi

      # 8. Install Gradle if wrapper missing
      - name: Install Gradle
        if: env.wrapper == 'false'
        run: |
          sudo apt-get install -y gradle
          gradle --version

      # 9. Build APK
      - name: Build APK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          if [ "$wrapper" == "true" ]; then
            chmod +x ./gradlew
            ./gradlew assembleDebug
          else
            gradle assembleDebug
          fi

      # 10. Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
