name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            python3-pip \
            python3-setuptools \
            python3-wheel \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            libjpeg-dev \
            zlib1g-dev \
            wget

      - name: Install Buildozer
        run: |
          pip install --upgrade pip
          pip install buildozer

      - name: Install Android SDK & NDK
        run: |
          mkdir -p ~/.buildozer/android/platform
          cd ~/.buildozer/android/platform
          wget https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip
          unzip commandlinetools-linux-9123335_latest.zip -d cmdline-tools
          yes | cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/.buildozer/android/platform/android-sdk \
            "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.1.8937393"
          yes | cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/.buildozer/android/platform/android-sdk --licenses

      - name: Initialize Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Build APK
        run: |
          buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-apk
          path: bin/*.apk
            "platform-tools"
          
      # 4. Gives execute permission to the Gradle wrapper script
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 5. Assembles the debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # 6. Uploads the generated APK file as a workflow artifact
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
                     "platforms;android-34" \
                     "build-tools;34.0.0" \
                     "cmdline-tools;latest"

      # 6. Create cmdline-tools directory (if needed)
      - name: Create cmdline-tools directory
        run: mkdir -p $ANDROID_HOME/cmdline-tools

      # 7. Make Gradlew executable
      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # 8. Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # 9. Upload the generated APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          run: |
            sdkmanager "platform-tools" "platforms;android-33" "build-tools;34.0.0" "ndk;25.2.9519653"

      # 6. Make Gradlew executable
      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      # 7. Build the APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # 8. Upload the APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          run:  mkdir -p $ANDROID_HOME/cmdline-tools
            cd $ANDROID_HOME/cmdline-tools
            wget https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -O cmdline-tools.zip
            unzip cmdline-tools.zip -d latest
            rm cmdline-tools.zip

            yes | sdkmanager --licenses
            sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # 5. Install NDK
      - name: Install NDK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          yes | sdkmanager --install "ndk;23.1.7779620"

      # 6. Accept all licenses
      - name: Accept Licenses
        run: yes | sdkmanager --licenses

      # 7. Check if Gradle Wrapper exists
      - name: Check for Gradle Wrapper
        id: check-wrapper
        run: |
          if [ -f "./gradlew" ]; then
            echo "wrapper=true" >> $GITHUB_ENV
          else
            echo "wrapper=false" >> $GITHUB_ENV
          fi

      # 8. Install Gradle if wrapper missing
      - name: Install Gradle
        if: env.wrapper == 'false'
        run: |
          sudo apt-get install -y gradle
          gradle --version

      # 9. Build APK
      - name: Build APK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH

          if [ "$wrapper" == "true" ]; then
            chmod +x ./gradlew
            ./gradlew assembleDebug
          else
            gradle assembleDebug
          fi

      # 10. Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
